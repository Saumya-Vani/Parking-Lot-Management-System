# -*- coding: utf-8 -*-
"""Dataset_Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15QJOQM2-ooxr9hKQH2lOTa54lnxzsJE2
"""

import pandas as pd

def generate_parking_lot_excel(filename="parking_lot_data.xlsx", num_slots=50):
    data = {
        "Slot Number": list(range(10, 10 + num_slots * 5, 5)),
        "Car License Number": [f"CAR{i:03d}" if i < num_slots // 2 else "" for i in range(num_slots)],  # First half occupied
        "Entry Time": pd.date_range(start="2025-03-10 08:00", periods=num_slots, freq="30min").strftime('%Y-%m-%d %H:%M'),
        "Availability": [False if i < num_slots // 2 else True for i in range(num_slots)],  # First half occupied, second half available
        "Reservations": [False for i in range(num_slots)]
        }

    df = pd.DataFrame(data)
    df.to_excel(filename, index=False)
    print(f"Excel file '{filename}' generated successfully!")

generate_parking_lot_excel("parking_lot_data.xlsx", num_slots=50)

import pandas as pd
import numpy as np
import datetime

def generate_large_parking_dataset(num_slots=10000, filename="large_parking_lot.xlsx"):
    slot_numbers = np.arange(10, 10 + num_slots * 5, 5)

    car_license_numbers = [f"CAR{str(i).zfill(5)}" if i % 2 == 0 else "" for i in range(num_slots)]

    entry_times = [datetime.datetime.now() - datetime.timedelta(hours=np.random.randint(1, 24))
                   if car_license_numbers[i] else "" for i in range(num_slots)]

    availability = [False if i < num_slots // 2 else True for i in range(num_slots)]
    reservations = [False for i in range(num_slots)]

    df = pd.DataFrame({
        "Slot Number": slot_numbers,
        "Car License Number": car_license_numbers,
        "Entry Time": [et.strftime('%Y-%m-%d %H:%M') if et else "" for et in entry_times],
        "Availability": availability,
        "Reservations": reservations
    })

    df.to_excel(filename, index=False)
    print(f"Generated dataset with {num_slots} slots: {filename}")

generate_large_parking_dataset(10000, "parking_lot_10k.xlsx")
generate_large_parking_dataset(100000, "parking_lot_100k.xlsx")